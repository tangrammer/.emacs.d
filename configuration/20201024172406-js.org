:PROPERTIES:
:ID:       DAE4560C-1B96-4BEF-B7C5-973CB1917161
:END:
#+TITLE: js
[[id:CDC94012-241F-4140-984E-89878DC309FE][coding]] [[id:15B089E4-4B1A-4D3D-BC90-CB2467C991AB][language]]

JS CONFIG http://codewinds.com/blog/2015-04-02-emacs-flycheck-eslint-jsx.html#emacs_configuration_for_eslint_and_jsx

#+BEGIN_SRC emacs-lisp :results silent

(use-package js2-mode
  :straight t
  ;;  :hook (dumb-jump-mode)
  :config
  (setq-default indent-tabs-mode nil)
  (setq-default tab-width 2)
  (setq-default js2-basic-offset 2))

;; configure indentation
;; https://github.com/mooz/js2-mode/issues/339


#+END_SRC


* indiumn
#+BEGIN_SRC untangle :results silent
(use-package indium

  :straight t
;;  :hook (hs-minor-mode)
    )
#+END_SRC





* ivy

#+BEGIN_SRC emacs-lisp :results silent
(use-package dumb-jump
  :straight (dumb-jump :type git :host github :repo "jacktasia/dumb-jump")
    )

(dumb-jump-mode)
(setq dumb-jump-selector 'ivy)
#+END_SRC

** Usage

The one important shortcut is =C-M-g= which attempts to jump to the
definition of the thing under point.


* =js-comint=
https://github.com/redguardtoo/js-comint

#+BEGIN_SRC emacs-lisp :results silent
(use-package js-comint

  :straight t
;;  :hook (hs-minor-mode)
    )


#+END_SRC



Run a JavaScript interpreter in an inferior process window.
** Configure
#+BEGIN_SRC emacs-lisp :results silent
(add-hook 'rjsx-mode-hook
          (lambda ()
            (local-set-key (kbd "C-x C-e") 'js-send-last-sexp)
            (local-set-key (kbd "C-M-x") 'js-send-last-sexp-and-go)
            (local-set-key (kbd "C-c b") 'js-send-buffer)
            (local-set-key (kbd "C-c C-b") 'js-send-buffer-and-go)
            (local-set-key (kbd "C-c l") 'js-load-file-and-go)))
#+END_SRC




* prettier

  #+BEGIN_SRC untangle :results silent
(add-to-list 'load-path "~/.emacs.d/local/prettier-eslint-emacs-frank")
(require 'prettier-eslint)
'(add-hook 'js2-mode-hook 'prettier-eslint-mode)
'(add-hook 'web-mode-hook 'prettier-eslint-mode)

'(eval-after-load 'js2-mode
  '(add-hook 'js2-mode-hook (lambda () (add-hook 'after-save-hook 'prettier-eslint nil t))))
'(eval-after-load 'web-mode
  '(add-hook 'web-mode-hook (lambda () (add-hook 'after-save-hook 'prettier-eslint nil t))))

#+END_SRC



 ;;https://github.com/prettier/prettier-emacs
#+BEGIN_SRC untangle :results silent
'(add-to-list 'load-path "~/.emacs.d/local/prettier-emacs")

'(require 'prettier-js)

'(setq prettier-js-args '(
			 "--single-quote" "true"
			 "--print-width" "100"
			 "--trailing-comma" "all"
			 ))

'(add-hook 'js2-mode-hook 'prettier-js-mode)
'(add-hook 'web-mode-hook 'prettier-js-mode)


#+END_SRC
