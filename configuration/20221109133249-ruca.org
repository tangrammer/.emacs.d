:PROPERTIES:
:ID:       892D3A4D-14E3-4D60-94DA-9410D6010331
:END:
#+title: ruca


specifics of ruca & yorba

* open app based on env and service
#+BEGIN_SRC emacs-lisp :results silent
(defun yorba (choice)
  (interactive
   (let ((completion-ignore-case  t))
     (list (completing-read "Choose: " '("clojure-local" "node-local" "app-local"
                                         "clojure-dev" "node-dev" "app-dev"
                                         "clojure-staging" "node-staging" "app-staging"
                                         "clojure-prod" "node-prod" "app-prod") nil t))))
  (let ((dir (cond ((string= choice "clojure-local" ) "http://localhost:3001")
                   ((string= choice "clojure-dev" ) "https://dev-datasource.yorba.app/")
                   ((string= choice "clojure-staging" ) "https://staging-datasource.yorba.app/")
                   ((string= choice "clojure-prod" ) "https://datasource.yorba.app/")
                   ((string= choice "node-local" ) "http://localhost:3007/status")
                   ((string= choice "node-dev" ) "https://dev-api.yorba.app/status")
                   ((string= choice "node-staging" ) "https://staging-api.yorba.app/status")
                   ((string= choice "node-prod" ) "https://api.yorba.app/status")
                   ((string= choice "app-local" ) "http://localhost:3081")
                   ((string= choice "app-dev" ) "https://dev.yorba.app/")
                   ((string= choice "app-staging" ) "https://staging.yorba.app/")
                   ((string= choice "app-production" ) "https://yorba.app/"))))
    (browse-url dir)))

#+END_SRC

* yorba-clj deployment based on env
#+BEGIN_SRC emacs-lisp :results silent
(setq yorba-repo "~/git/ruca/yorba-clj")

(defun adapt-branch (deployment)
(cond ((string= choice "dev" ) "dev")
      ((string= choice "staging" ) "staging")
      ((string= choice "production" ) "master")))

(defun yorba-deployment (choice bool)
  (interactive
   (let ((completion-ignore-case  t))
     (let* ((old (completing-read "Choose: " '("dev" "staging" "production") nil t))
           (new (y-or-n-p (format "Are you sure to deploy to '%s'? " old))))
      (list old new))))
  (if bool
      (progn
        (shell-command-to-string (format "%s/cicd/trigger-deploy %s %s" yorba-repo choice (adapt-branch choice)))
        (message (format "deployment triggered to %s" choice))
        )
    (message (format "Answering NO, avoiding deployment to %s "choice))))
#+END_SRC
